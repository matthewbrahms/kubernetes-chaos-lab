---
# This playbook will initialize kubeadm on our chaos cluster hosts

- hosts: all
  remote_user: root
  vars_prompt:
    - name: datadog_api_key
      prompt: Input your DataDog API key
  connection: ssh
  gather_facts: no
  tasks:
    - name: Install Ansible requirements
      raw: apt update && apt install -y python

    - name: Install apt-transport-https
      apt: 
        name: apt-transport-https 
        update_cache: yes

    - name: Add GCP apt signing key
      apt_key: 
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Create Kubernetes apt repo list
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Install Kubernetes packages
      apt:
        name: "{{ item }}"
        state: latest
        update_cache: yes
      with_items:
        - kubelet
        - kubeadm
        - kubectl
        - docker.io
        - htop

    - name: Update all Debian/Ubuntu hosts
      apt: 
        upgrade: dist
      ignore_errors: yes

    - name: Install DataDog host-level monitoring
      shell: "docker run -d --name dd-agent -v /var/run/docker.sock:/var/run/docker.sock:ro -v /proc/:/host/proc/:ro -v /sys/fs/cgroup/:/host/sys/fs/cgroup:ro -e DD_API_KEY={{ datadog_api_key }} datadog/agent:latest"

    - name: Create .kube directory
      file:
        path: /root/.kube
        state: directory
        mode: 0755

    - name: Clone Tammy Butow Chaos Engineering Bootcamp toolset to our servers
      git:
        repo: 'https://github.com/tammybutow/chaos_engineering_bootcamp.git'
        dest: /root/chaos_engineering_bootcamp

    - name: Run kubeadm init on master
      when: inventory_hostname == 'k8s-node-1'
      shell: kubeadm init
      register: kubeadminit

    - name: Copy kubeadm configs to .kube
      when: inventory_hostname == 'k8s-node-1'
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /root/.kube/config
        owner: root
        group: root
        mode: 0755
        remote_src: yes

    - name: Write out kubeadm init logs to local machine
      local_action: copy content={{ kubeadminit }} dest=kubeadm_join.log

    - name: Persist kubeadm init logs to k8s-node-1
      copy:
        src: kubeadm_join.log
        dest: /root/kubeadm_join.log
        owner: root
        group: root
        mode: 0755
        
    - name: Show kubeadm results
      debug: var=kubeadminit
